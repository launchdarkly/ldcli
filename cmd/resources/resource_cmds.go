// This file is generated by gen_resources.go; DO NOT EDIT.

package resources

import (
	"github.com/spf13/cobra"

	"ldcli/internal/analytics"
	"ldcli/internal/resources"
)

func AddAllResourceCmds(rootCmd *cobra.Command, client resources.Client, analyticsTracker analytics.Tracker) {
	// Resource commands

	gen_TeamsResourceCmd := NewResourceCmd(
		rootCmd,
		analyticsTracker,
		"teams",
		"Make requests (list, create, etc.) on teams",
		"\u003e ### Teams is an Enterprise feature\n\u003e\n\u003e Teams is available to customers on an Enterprise plan. To learn more, [read about our pricing](https://launchdarkly.com/pricing/). To upgrade your plan, [contact Sales](https://launchdarkly.com/contact-sales/).\n\nA team is a group of members in your LaunchDarkly account. A team can have maintainers who are able to add and remove team members. It also can have custom roles assigned to it that allows shared access to those roles for all team members. To learn more, read [Teams](https://docs.launchdarkly.com/home/teams).\n\nThe Teams API allows you to create, read, update, and delete a team.\n\nSeveral of the endpoints in the Teams API require one or more member IDs. The member ID is returned as part of the [List account members](/tag/Account-members#operation/getMembers) response. It is the `_id` field of each element in the `items` array.\n",
	)

	// Operation commands

	NewOperationCmd(gen_TeamsResourceCmd, client, OperationData{
		Short: "Delete team",
		Long:  "Delete a team by key. To learn more, read [Deleting a team](https://docs.launchdarkly.com/home/teams/managing#deleting-a-team).",
		Use:   "delete-team",
		Params: []Param{
			{
				Name:        "team-key",
				In:          "path",
				Description: "The team key",
				Type:        "string",
			},
		},
		HTTPMethod:            "DELETE",
		RequiresBody:          false,
		Path:                  "/api/v2/teams/{teamKey}",
		SupportsSemanticPatch: false,
	})

	NewOperationCmd(gen_TeamsResourceCmd, client, OperationData{
		Short: "Get team",
		Long:  "Fetch a team by key.\n\n### Expanding the teams response\nLaunchDarkly supports four fields for expanding the \"Get team\" response. By default, these fields are **not** included in the response.\n\nTo expand the response, append the `expand` query parameter and add a comma-separated list with any of the following fields:\n\n* `members` includes the total count of members that belong to the team.\n* `roles` includes a paginated list of the custom roles that you have assigned to the team.\n* `projects` includes a paginated list of the projects that the team has any write access to.\n* `maintainers` includes a paginated list of the maintainers that you have assigned to the team.\n\nFor example, `expand=members,roles` includes the `members` and `roles` fields in the response.\n",
		Use:   "get-team",
		Params: []Param{
			{
				Name:        "team-key",
				In:          "path",
				Description: "The team key.",
				Type:        "string",
			},
			{
				Name:        "expand",
				In:          "query",
				Description: "A comma-separated list of properties that can reveal additional information in the response.",
				Type:        "string",
			},
		},
		HTTPMethod:            "GET",
		RequiresBody:          false,
		Path:                  "/api/v2/teams/{teamKey}",
		SupportsSemanticPatch: false,
	})

	NewOperationCmd(gen_TeamsResourceCmd, client, OperationData{
		Short: "Get team maintainers",
		Long:  "Fetch the maintainers that have been assigned to the team. To learn more, read [Managing team maintainers](https://docs.launchdarkly.com/home/teams/managing#managing-team-maintainers).",
		Use:   "get-team-maintainers",
		Params: []Param{
			{
				Name:        "team-key",
				In:          "path",
				Description: "The team key",
				Type:        "string",
			},
			{
				Name:        "limit",
				In:          "query",
				Description: "The number of maintainers to return in the response. Defaults to 20.",
				Type:        "integer",
			},
			{
				Name:        "offset",
				In:          "query",
				Description: "Where to start in the list. This is for use with pagination. For example, an offset of 10 skips the first ten items and then returns the next items in the list, up to the query `limit`.",
				Type:        "integer",
			},
		},
		HTTPMethod:            "GET",
		RequiresBody:          false,
		Path:                  "/api/v2/teams/{teamKey}/maintainers",
		SupportsSemanticPatch: false,
	})

	NewOperationCmd(gen_TeamsResourceCmd, client, OperationData{
		Short: "Get team custom roles",
		Long:  "Fetch the custom roles that have been assigned to the team. To learn more, read [Managing team permissions](https://docs.launchdarkly.com/home/teams/managing#managing-team-permissions).",
		Use:   "get-team-roles",
		Params: []Param{
			{
				Name:        "team-key",
				In:          "path",
				Description: "The team key",
				Type:        "string",
			},
			{
				Name:        "limit",
				In:          "query",
				Description: "The number of roles to return in the response. Defaults to 20.",
				Type:        "integer",
			},
			{
				Name:        "offset",
				In:          "query",
				Description: "Where to start in the list. This is for use with pagination. For example, an offset of 10 skips the first ten items and then returns the next items in the list, up to the query `limit`.",
				Type:        "integer",
			},
		},
		HTTPMethod:            "GET",
		RequiresBody:          false,
		Path:                  "/api/v2/teams/{teamKey}/roles",
		SupportsSemanticPatch: false,
	})

	NewOperationCmd(gen_TeamsResourceCmd, client, OperationData{
		Short: "List teams",
		Long:  "Return a list of teams.\n\nBy default, this returns the first 20 teams. Page through this list with the `limit` parameter and by following the `first`, `prev`, `next`, and `last` links in the `_links` field that returns. If those links do not appear, the pages they refer to don't exist. For example, the `first` and `prev` links will be missing from the response on the first page, because there is no previous page and you cannot return to the first page when you are already on the first page.\n\n### Filtering teams\n\nLaunchDarkly supports the following fields for filters:\n\n- `query` is a string that matches against the teams' names and keys. It is not case-sensitive.\n  - A request with `query:abc` returns teams with the string `abc` in their name or key.\n- `nomembers` is a boolean that filters the list of teams who have 0 members\n  - A request with `nomembers:true` returns teams that have 0 members\n  - A request with `nomembers:false` returns teams that have 1 or more members\n\n### Expanding the teams response\nLaunchDarkly supports four fields for expanding the \"List teams\" response. By default, these fields are **not** included in the response.\n\nTo expand the response, append the `expand` query parameter and add a comma-separated list with any of the following fields:\n\n* `members` includes the total count of members that belong to the team.\n* `roles` includes a paginated list of the custom roles that you have assigned to the team.\n* `projects` includes a paginated list of the projects that the team has any write access to.\n* `maintainers` includes a paginated list of the maintainers that you have assigned to the team.\n\nFor example, `expand=members,roles` includes the `members` and `roles` fields in the response.\n",
		Use:   "get-teams",
		Params: []Param{
			{
				Name:        "limit",
				In:          "query",
				Description: "The number of teams to return in the response. Defaults to 20.",
				Type:        "integer",
			},
			{
				Name:        "offset",
				In:          "query",
				Description: "Where to start in the list. Use this with pagination. For example, an offset of 10 skips the first ten items and returns the next `limit` items.",
				Type:        "integer",
			},
			{
				Name:        "filter",
				In:          "query",
				Description: "A comma-separated list of filters. Each filter is constructed as `field:value`.",
				Type:        "string",
			},
			{
				Name:        "expand",
				In:          "query",
				Description: "A comma-separated list of properties that can reveal additional information in the response.",
				Type:        "string",
			},
		},
		HTTPMethod:            "GET",
		RequiresBody:          false,
		Path:                  "/api/v2/teams",
		SupportsSemanticPatch: false,
	})

	NewOperationCmd(gen_TeamsResourceCmd, client, OperationData{
		Short: "Update team",
		Long:  "Perform a partial update to a team. Updating a team uses the semantic patch format.\n\nTo make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header. To learn more, read [Updates using semantic patch](/reference#updates-using-semantic-patch).\n\n### Instructions\n\nSemantic patch requests support the following `kind` instructions for updating teams.\n\n\u003cdetails\u003e\n\u003csummary\u003eClick to expand instructions for \u003cstrong\u003eupdating teams\u003c/strong\u003e\u003c/summary\u003e\n\n#### addCustomRoles\n\nAdds custom roles to the team. Team members will have these custom roles granted to them.\n\n##### Parameters\n\n- `values`: List of custom role keys.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [{\n    \"kind\": \"addCustomRoles\",\n    \"values\": [ \"example-custom-role\" ]\n  }]\n}\n```\n\n#### removeCustomRoles\n\nRemoves custom roles from the team. The app will no longer grant these custom roles to the team members.\n\n##### Parameters\n\n- `values`: List of custom role keys.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [{\n    \"kind\": \"removeCustomRoles\",\n    \"values\": [ \"example-custom-role\" ]\n  }]\n}\n```\n\n#### addMembers\n\nAdds members to the team.\n\n##### Parameters\n\n- `values`: List of member IDs to add.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [{\n    \"kind\": \"addMembers\",\n    \"values\": [ \"1234a56b7c89d012345e678f\", \"507f1f77bcf86cd799439011\" ]\n  }]\n}\n```\n\n#### removeMembers\n\nRemoves members from the team.\n\n##### Parameters\n\n- `values`: List of member IDs to remove.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [{\n    \"kind\": \"removeMembers\",\n    \"values\": [ \"1234a56b7c89d012345e678f\", \"507f1f77bcf86cd799439011\" ]\n  }]\n}\n```\n\n#### replaceMembers\n\nReplaces the existing members of the team with the new members.\n\n##### Parameters\n\n- `values`: List of member IDs of the new members.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [{\n    \"kind\": \"replaceMembers\",\n    \"values\": [ \"1234a56b7c89d012345e678f\", \"507f1f77bcf86cd799439011\" ]\n  }]\n}\n```\n\n#### addPermissionGrants\n\nAdds permission grants to members for the team. For example, a permission grant could allow a member to act as a team maintainer. A permission grant may have either an `actionSet` or a list of `actions` but not both at the same time. The members do not have to be team members to have a permission grant for the team.\n\n##### Parameters\n\n- `actionSet`: Name of the action set.\n- `actions`: List of actions.\n- `memberIDs`: List of member IDs.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [{\n    \"kind\": \"addPermissionGrants\",\n    \"actions\": [ \"updateTeamName\", \"updateTeamDescription\" ],\n    \"memberIDs\": [ \"1234a56b7c89d012345e678f\", \"507f1f77bcf86cd799439011\" ]\n  }]\n}\n```\n\n#### removePermissionGrants\n\nRemoves permission grants from members for the team. A permission grant may have either an `actionSet` or a list of `actions` but not both at the same time. The `actionSet` and `actions` must match an existing permission grant.\n\n##### Parameters\n\n- `actionSet`: Name of the action set.\n- `actions`: List of actions.\n- `memberIDs`: List of member IDs.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [{\n    \"kind\": \"removePermissionGrants\",\n    \"actions\": [ \"updateTeamName\", \"updateTeamDescription\" ],\n    \"memberIDs\": [ \"1234a56b7c89d012345e678f\", \"507f1f77bcf86cd799439011\" ]\n  }]\n}\n```\n\n#### updateDescription\n\nUpdates the description of the team.\n\n##### Parameters\n\n- `value`: The new description.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [{\n    \"kind\": \"updateDescription\",\n    \"value\": \"Updated team description\"\n  }]\n}\n```\n\n#### updateName\n\nUpdates the name of the team.\n\n##### Parameters\n\n- `value`: The new name.\n\nHere's an example:\n\n```json\n{\n  \"instructions\": [{\n    \"kind\": \"updateName\",\n    \"value\": \"Updated team name\"\n  }]\n}\n```\n\n\u003c/details\u003e\n\n### Expanding the teams response\nLaunchDarkly supports four fields for expanding the \"Update team\" response. By default, these fields are **not** included in the response.\n\nTo expand the response, append the `expand` query parameter and add a comma-separated list with any of the following fields:\n\n* `members` includes the total count of members that belong to the team.\n* `roles` includes a paginated list of the custom roles that you have assigned to the team.\n* `projects` includes a paginated list of the projects that the team has any write access to.\n* `maintainers` includes a paginated list of the maintainers that you have assigned to the team.\n\nFor example, `expand=members,roles` includes the `members` and `roles` fields in the response.\n",
		Use:   "patch-team",
		Params: []Param{
			{
				Name:        "team-key",
				In:          "path",
				Description: "The team key",
				Type:        "string",
			},
			{
				Name:        "expand",
				In:          "query",
				Description: "A comma-separated list of properties that can reveal additional information in the response. Supported fields are explained above.",
				Type:        "string",
			},
		},
		HTTPMethod:            "PATCH",
		RequiresBody:          true,
		Path:                  "/api/v2/teams/{teamKey}",
		SupportsSemanticPatch: true,
	})

	NewOperationCmd(gen_TeamsResourceCmd, client, OperationData{
		Short: "Create team",
		Long:  "Create a team. To learn more, read [Creating a team](https://docs.launchdarkly.com/home/teams/creating).\n\n### Expanding the teams response\nLaunchDarkly supports four fields for expanding the \"Create team\" response. By default, these fields are **not** included in the response.\n\nTo expand the response, append the `expand` query parameter and add a comma-separated list with any of the following fields:\n\n* `members` includes the total count of members that belong to the team.\n* `roles` includes a paginated list of the custom roles that you have assigned to the team.\n* `projects` includes a paginated list of the projects that the team has any write access to.\n* `maintainers` includes a paginated list of the maintainers that you have assigned to the team.\n\nFor example, `expand=members,roles` includes the `members` and `roles` fields in the response.\n",
		Use:   "post-team",
		Params: []Param{
			{
				Name:        "expand",
				In:          "query",
				Description: "A comma-separated list of properties that can reveal additional information in the response. Supported fields are explained above.",
				Type:        "string",
			},
		},
		HTTPMethod:            "POST",
		RequiresBody:          true,
		Path:                  "/api/v2/teams",
		SupportsSemanticPatch: false,
	})

	NewOperationCmd(gen_TeamsResourceCmd, client, OperationData{
		Short: "Add multiple members to team",
		Long:  "Add multiple members to an existing team by uploading a CSV file of member email addresses. Your CSV file must include email addresses in the first column. You can include data in additional columns, but LaunchDarkly ignores all data outside the first column. Headers are optional. To learn more, read [Managing team members](https://docs.launchdarkly.com/home/teams/managing#managing-team-members).\n\n**Members are only added on a `201` response.** A `207` indicates the CSV file contains a combination of valid and invalid entries. A `207` results in no members being added to the team.\n\nOn a `207` response, if an entry contains bad input, the `message` field contains the row number as well as the reason for the error. The `message` field is omitted if the entry is valid.\n\nExample `207` response:\n```json\n{\n  \"items\": [\n    {\n      \"status\": \"success\",\n      \"value\": \"new-team-member@acme.com\"\n    },\n    {\n      \"message\": \"Line 2: empty row\",\n      \"status\": \"error\",\n      \"value\": \"\"\n    },\n    {\n      \"message\": \"Line 3: email already exists in the specified team\",\n      \"status\": \"error\",\n      \"value\": \"existing-team-member@acme.com\"\n    },\n    {\n      \"message\": \"Line 4: invalid email formatting\",\n      \"status\": \"error\",\n      \"value\": \"invalid email format\"\n    }\n  ]\n}\n```\n\nMessage | Resolution\n--- | ---\nEmpty row | This line is blank. Add an email address and try again.\nDuplicate entry | This email address appears in the file twice. Remove the email from the file and try again.\nEmail already exists in the specified team | This member is already on your team. Remove the email from the file and try again.\nInvalid formatting | This email address is not formatted correctly. Fix the formatting and try again.\nEmail does not belong to a LaunchDarkly member | The email address doesn't belong to a LaunchDarkly account member. Invite them to LaunchDarkly, then re-add them to the team.\n\nOn a `400` response, the `message` field may contain errors specific to this endpoint.\n\nExample `400` response:\n```json\n{\n  \"code\": \"invalid_request\",\n  \"message\": \"Unable to process file\"\n}\n```\n\nMessage | Resolution\n--- | ---\nUnable to process file | LaunchDarkly could not process the file for an unspecified reason. Review your file for errors and try again.\nFile exceeds 25mb | Break up your file into multiple files of less than 25mbs each.\nAll emails have invalid formatting | None of the email addresses in the file are in the correct format. Fix the formatting and try again.\nAll emails belong to existing team members | All listed members are already on this team. Populate the file with member emails that do not belong to the team and try again.\nFile is empty | The CSV file does not contain any email addresses. Populate the file and try again.\nNo emails belong to members of your LaunchDarkly organization | None of the email addresses belong to members of your LaunchDarkly account. Invite these members to LaunchDarkly, then re-add them to the team.\n",
		Use:   "post-team-members",
		Params: []Param{
			{
				Name:        "team-key",
				In:          "path",
				Description: "The team key",
				Type:        "string",
			},
		},
		HTTPMethod:            "POST",
		RequiresBody:          true,
		Path:                  "/api/v2/teams/{teamKey}/members",
		SupportsSemanticPatch: false,
	})

}
