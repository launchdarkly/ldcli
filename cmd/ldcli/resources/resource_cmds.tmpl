// This file is generated by gen_resources.go; DO NOT EDIT.

package resources

import (
	"github.com/charmbracelet/glamour"
	"github.com/spf13/cobra"

	"github.com/launchdarkly/ldcli/internal/analytics"
	"github.com/launchdarkly/ldcli/internal/resources"
)

func AddAllResourceCmds(
  rootCmd *cobra.Command,
  client resources.Client,
  analyticsTrackerFn analytics.TrackerFn,
) {
	markdownRenderer, _ := glamour.NewTermRenderer(
		glamour.WithAutoStyle(),
		glamour.WithWordWrap(0),
		// remove default margin
		glamour.WithStylesFromJSONBytes([]byte(
			`{
				"document": {
					"margin": 0
				}
			}`,
		)),
	)

	// Resource commands
	{{ range $resKey, $resData := .Resources }}
	gen_{{ $resData.GoName }}ResourceCmd := NewResourceCmd(
        rootCmd,
        analyticsTrackerFn,
        markdownRenderer,
        "{{ $resKey }}",
        {{ $resData.Description }},
    )
    {{ end }}

    // Operation commands
    {{ range $resName, $resData := .Resources }}{{ range $opName, $opData := $resData.Operations }}
    NewOperationCmd(gen_{{ $resData.GoName }}ResourceCmd, client, markdownRenderer, OperationData{
            Short: {{ $opData.Short }},
            Long:  {{ $opData.Long }},
            Use:   "{{ $opData.Use }}",
            Params: []Param{ {{ range $param := $opData.Params }}
                {
                    Name:        "{{ $param.Name }}",
                    In:          "{{ $param.In }}",
                    Description: {{ $param.Description }},
                    Type:        "{{ $param.Type }}",
                }, {{ end }}
            },
            HTTPMethod:            "{{ $opData.HTTPMethod }}",
            HasBody:               {{ $opData.HasBody }},
            IsBeta:                {{ $opData.IsBeta }},
            RequiresBody:          {{ $opData.RequiresBody }},
            Path:                  "{{ $opData.Path }}",
            SupportsSemanticPatch: {{ $opData.SupportsSemanticPatch }},
        })

	{{ end }}{{ end }}
}
