version: 2

project_name: ldcli

env:
  - GO111MODULE=on # Ensure we aren't using anything in GOPATH when building
  - CGO_ENABLED=1 # Needed for SQLite support
  - DOCKER_CLI_EXPERIMENTAL=enabled # This is on by default in docker versions >= 20.10

builds:
  - id: ldcli
    binary: ldcli
    goos:
      - darwin
      - linux
      - windows
    goarch:
      - "386"
      - amd64
      - arm64
    ldflags:
      - -s # Omit all symbol information to minimize binary size
      - -w # Omit DWARF to minimize binary size
      - -X 'main.version={{.Version}}'
    ignore:
      - goos: darwin
        goarch: "386"
    env:
      # The below environment variables set up the c compiler toolchain for CGO.
      # Templates are used to vary the toolchain based on OS & platform.
      - TOOLCHAIN_BASE=
        {{- if eq .Os "darwin" -}}
          o
          {{- if eq .Arch "arm64" -}}a{{- end -}}
          64-clang
        {{- else -}}
          {{- if eq .Os "windows" -}}/llvm-mingw/bin/{{- end -}}
          {{- if eq .Arch "386" -}}i686{{- end -}}
          {{- if eq .Arch "arm64" -}}aarch64{{- end -}}
          {{- if eq .Arch "amd64" -}}x86_64{{- end -}}
          -
          {{- if eq .Os "windows" -}}w64-mingw32{{- end -}}
          {{- if eq .Os "linux" -}}linux-gnu{{- end -}}
        {{- end -}}
      - CC={{ .Env.TOOLCHAIN_BASE }}{{ if ne .Os "darwin" }}-gcc{{ end }}
      - CXX={{ .Env.TOOLCHAIN_BASE }}{{ if eq .Os "darwin" }}++{{ else }}-g++{{ end }}

dockers:
  # AMD64
  - image_templates:
      - "launchdarkly/ldcli:{{ .Version }}-amd64"
      - "launchdarkly/ldcli:v{{ .Major }}-amd64"
      - "launchdarkly/ldcli:latest-amd64"
    goos: linux
    goarch: amd64
    dockerfile: Dockerfile.goreleaser
    skip_push: false
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64"

  # ARM64v8
  - image_templates:
      - "launchdarkly/ldcli:{{ .Version }}-arm64v8"
      - "launchdarkly/ldcli:v{{ .Major }}-arm64v8"
      - "launchdarkly/ldcli:latest-arm64v8"
    goos: linux
    goarch: arm64
    dockerfile: Dockerfile.goreleaser
    skip_push: false
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm64/v8"
docker_manifests:
  - name_template: "launchdarkly/ldcli:{{ .Version}}"
    skip_push: false
    image_templates:
      - "launchdarkly/ldcli:{{ .Version }}-amd64"
      - "launchdarkly/ldcli:{{ .Version }}-arm64v8"

  - name_template: "launchdarkly/ldcli:v{{ .Major }}"
    skip_push: false
    image_templates:
      - "launchdarkly/ldcli:v{{ .Major }}-amd64"
      - "launchdarkly/ldcli:v{{ .Major }}-arm64v8"

  - name_template: "launchdarkly/ldcli:latest"
    skip_push: false
    image_templates:
      - "launchdarkly/ldcli:latest-amd64"
      - "launchdarkly/ldcli:latest-arm64v8"
brews:
  - name: ldcli
    description: "The official command line interface for managing LaunchDarkly feature flags."
    homepage: "https://launchdarkly.com"
    repository:
      owner: launchdarkly
      name: homebrew-tap
      branch: master
      git:
        url: git@github.com:launchdarkly/homebrew-tap.git
        private_key: "{{ .Env.HOMEBREW_DEPLOY_KEY }}"
    directory: Formula
    url_template: "https://github.com/launchdarkly/ldcli/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    install: |
      bin.install "ldcli"
    commit_author:
      name: LaunchDarklyReleaseBot
      email: launchdarklyreleasebot@launchdarkly.com
